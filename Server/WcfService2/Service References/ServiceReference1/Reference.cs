//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfService2.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Teacher", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class Teacher : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string departmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pincodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string subjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string department {
            get {
                return this.departmentField;
            }
            set {
                if ((object.ReferenceEquals(this.departmentField, value) != true)) {
                    this.departmentField = value;
                    this.RaisePropertyChanged("department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pincode {
            get {
                return this.pincodeField;
            }
            set {
                if ((object.ReferenceEquals(this.pincodeField, value) != true)) {
                    this.pincodeField = value;
                    this.RaisePropertyChanged("pincode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                if ((object.ReferenceEquals(this.subjectField, value) != true)) {
                    this.subjectField = value;
                    this.RaisePropertyChanged("subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PincodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pincode {
            get {
                return this.PincodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PincodeField, value) != true)) {
                    this.PincodeField = value;
                    this.RaisePropertyChanged("Pincode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Section {
            get {
                return this.SectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionField, value) != true)) {
                    this.SectionField = value;
                    this.RaisePropertyChanged("Section");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subject", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class Subject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string teacherField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string teacher {
            get {
                return this.teacherField;
            }
            set {
                if ((object.ReferenceEquals(this.teacherField, value) != true)) {
                    this.teacherField = value;
                    this.RaisePropertyChanged("teacher");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddallResult", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class AddallResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkobtainedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalmarksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Markobtained {
            get {
                return this.MarkobtainedField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkobtainedField, value) != true)) {
                    this.MarkobtainedField = value;
                    this.RaisePropertyChanged("Markobtained");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Section {
            get {
                return this.SectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SectionField, value) != true)) {
                    this.SectionField = value;
                    this.RaisePropertyChanged("Section");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Totalmarks {
            get {
                return this.TotalmarksField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalmarksField, value) != true)) {
                    this.TotalmarksField = value;
                    this.RaisePropertyChanged("Totalmarks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchByDepartment", ReplyAction="http://tempuri.org/IService1/SearchByDepartmentResponse")]
        WcfService2.ServiceReference1.Teacher[] SearchByDepartment(string Department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchByDepartment", ReplyAction="http://tempuri.org/IService1/SearchByDepartmentResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.Teacher[]> SearchByDepartmentAsync(string Department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchByname", ReplyAction="http://tempuri.org/IService1/SearchBynameResponse")]
        WcfService2.ServiceReference1.Teacher[] SearchByname(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchByname", ReplyAction="http://tempuri.org/IService1/SearchBynameResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.Teacher[]> SearchBynameAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerStudent", ReplyAction="http://tempuri.org/IService1/registerStudentResponse")]
        void registerStudent(string username, string password, string email, string pincode, string section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerStudent", ReplyAction="http://tempuri.org/IService1/registerStudentResponse")]
        System.Threading.Tasks.Task registerStudentAsync(string username, string password, string email, string pincode, string section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerTeacher", ReplyAction="http://tempuri.org/IService1/registerTeacherResponse")]
        void registerTeacher(string username, string password, string email, string pincode, string subject, string department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerTeacher", ReplyAction="http://tempuri.org/IService1/registerTeacherResponse")]
        System.Threading.Tasks.Task registerTeacherAsync(string username, string password, string email, string pincode, string subject, string department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsValid", ReplyAction="http://tempuri.org/IService1/IsValidResponse")]
        bool IsValid(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsValid", ReplyAction="http://tempuri.org/IService1/IsValidResponse")]
        System.Threading.Tasks.Task<bool> IsValidAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/resetpaswrd", ReplyAction="http://tempuri.org/IService1/resetpaswrdResponse")]
        bool resetpaswrd(string name, string pin, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/resetpaswrd", ReplyAction="http://tempuri.org/IService1/resetpaswrdResponse")]
        System.Threading.Tasks.Task<bool> resetpaswrdAsync(string name, string pin, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsValidTeacher", ReplyAction="http://tempuri.org/IService1/IsValidTeacherResponse")]
        bool IsValidTeacher(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsValidTeacher", ReplyAction="http://tempuri.org/IService1/IsValidTeacherResponse")]
        System.Threading.Tasks.Task<bool> IsValidTeacherAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsValidStu", ReplyAction="http://tempuri.org/IService1/IsValidStuResponse")]
        bool IsValidStu(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsValidStu", ReplyAction="http://tempuri.org/IService1/IsValidStuResponse")]
        System.Threading.Tasks.Task<bool> IsValidStuAsync(string username, string password);
        
        // CODEGEN: Generating message contract since the wrapper name (SearchByName) of message SearchByNameRequest does not match the default value (SearchByName1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchByName", ReplyAction="http://tempuri.org/IService1/SearchByNameResponse")]
        WcfService2.ServiceReference1.SearchByNameResponse SearchByName1(WcfService2.ServiceReference1.SearchByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchByName", ReplyAction="http://tempuri.org/IService1/SearchByNameResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.SearchByNameResponse> SearchByName1Async(WcfService2.ServiceReference1.SearchByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchBySection", ReplyAction="http://tempuri.org/IService1/SearchBySectionResponse")]
        WcfService2.ServiceReference1.Student[] SearchBySection(string section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchBySection", ReplyAction="http://tempuri.org/IService1/SearchBySectionResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.Student[]> SearchBySectionAsync(string section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShowAll", ReplyAction="http://tempuri.org/IService1/ShowAllResponse")]
        WcfService2.ServiceReference1.Student[] ShowAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShowAll", ReplyAction="http://tempuri.org/IService1/ShowAllResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.Student[]> ShowAllAsync();
        
        // CODEGEN: Generating message contract since the wrapper name (showall) of message showallRequest does not match the default value (showall1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/showall", ReplyAction="http://tempuri.org/IService1/showallResponse")]
        WcfService2.ServiceReference1.showallResponse showall1(WcfService2.ServiceReference1.showallRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/showall", ReplyAction="http://tempuri.org/IService1/showallResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.showallResponse> showall1Async(WcfService2.ServiceReference1.showallRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerSubject", ReplyAction="http://tempuri.org/IService1/registerSubjectResponse")]
        void registerSubject(WcfService2.ServiceReference1.Student student, WcfService2.ServiceReference1.Subject subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerSubject", ReplyAction="http://tempuri.org/IService1/registerSubjectResponse")]
        System.Threading.Tasks.Task registerSubjectAsync(WcfService2.ServiceReference1.Student student, WcfService2.ServiceReference1.Subject subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/unregisterSubject", ReplyAction="http://tempuri.org/IService1/unregisterSubjectResponse")]
        void unregisterSubject(WcfService2.ServiceReference1.Student student, WcfService2.ServiceReference1.Subject subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/unregisterSubject", ReplyAction="http://tempuri.org/IService1/unregisterSubjectResponse")]
        System.Threading.Tasks.Task unregisterSubjectAsync(WcfService2.ServiceReference1.Student student, WcfService2.ServiceReference1.Subject subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSubjects", ReplyAction="http://tempuri.org/IService1/getSubjectsResponse")]
        WcfService2.ServiceReference1.Subject[] getSubjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSubjects", ReplyAction="http://tempuri.org/IService1/getSubjectsResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.Subject[]> getSubjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/loggedInStudent", ReplyAction="http://tempuri.org/IService1/loggedInStudentResponse")]
        WcfService2.ServiceReference1.Student loggedInStudent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/loggedInStudent", ReplyAction="http://tempuri.org/IService1/loggedInStudentResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.Student> loggedInStudentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/loggedInStudentSubject", ReplyAction="http://tempuri.org/IService1/loggedInStudentSubjectResponse")]
        WcfService2.ServiceReference1.Subject[] loggedInStudentSubject();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/loggedInStudentSubject", ReplyAction="http://tempuri.org/IService1/loggedInStudentSubjectResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.Subject[]> loggedInStudentSubjectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddResult", ReplyAction="http://tempuri.org/IService1/AddResultResponse")]
        void AddResult(string name, string section, string marksobtained, string totalmarks, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddResult", ReplyAction="http://tempuri.org/IService1/AddResultResponse")]
        System.Threading.Tasks.Task AddResultAsync(string name, string section, string marksobtained, string totalmarks, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/showResult", ReplyAction="http://tempuri.org/IService1/showResultResponse")]
        WcfService2.ServiceReference1.AddallResult[] showResult();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/showResult", ReplyAction="http://tempuri.org/IService1/showResultResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.AddallResult[]> showResultAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BySection", ReplyAction="http://tempuri.org/IService1/BySectionResponse")]
        WcfService2.ServiceReference1.AddallResult[] BySection(string section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BySection", ReplyAction="http://tempuri.org/IService1/BySectionResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.AddallResult[]> BySectionAsync(string section);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WcfService2.ServiceReference1.CompositeType GetDataUsingDataContract(WcfService2.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WcfService2.ServiceReference1.CompositeType composite);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchByName", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UserName;
        
        public SearchByNameRequest() {
        }
        
        public SearchByNameRequest(string UserName) {
            this.UserName = UserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchByNameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SearchByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public WcfService2.ServiceReference1.Student[] SearchByNameResult;
        
        public SearchByNameResponse() {
        }
        
        public SearchByNameResponse(WcfService2.ServiceReference1.Student[] SearchByNameResult) {
            this.SearchByNameResult = SearchByNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="showall", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class showallRequest {
        
        public showallRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="showallResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class showallResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public WcfService2.ServiceReference1.Teacher[] showallResult;
        
        public showallResponse() {
        }
        
        public showallResponse(WcfService2.ServiceReference1.Teacher[] showallResult) {
            this.showallResult = showallResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WcfService2.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WcfService2.ServiceReference1.IService1>, WcfService2.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfService2.ServiceReference1.Teacher[] SearchByDepartment(string Department) {
            return base.Channel.SearchByDepartment(Department);
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.Teacher[]> SearchByDepartmentAsync(string Department) {
            return base.Channel.SearchByDepartmentAsync(Department);
        }
        
        public WcfService2.ServiceReference1.Teacher[] SearchByname(string Name) {
            return base.Channel.SearchByname(Name);
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.Teacher[]> SearchBynameAsync(string Name) {
            return base.Channel.SearchBynameAsync(Name);
        }
        
        public void registerStudent(string username, string password, string email, string pincode, string section) {
            base.Channel.registerStudent(username, password, email, pincode, section);
        }
        
        public System.Threading.Tasks.Task registerStudentAsync(string username, string password, string email, string pincode, string section) {
            return base.Channel.registerStudentAsync(username, password, email, pincode, section);
        }
        
        public void registerTeacher(string username, string password, string email, string pincode, string subject, string department) {
            base.Channel.registerTeacher(username, password, email, pincode, subject, department);
        }
        
        public System.Threading.Tasks.Task registerTeacherAsync(string username, string password, string email, string pincode, string subject, string department) {
            return base.Channel.registerTeacherAsync(username, password, email, pincode, subject, department);
        }
        
        public bool IsValid(string username, string password) {
            return base.Channel.IsValid(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidAsync(string username, string password) {
            return base.Channel.IsValidAsync(username, password);
        }
        
        public bool resetpaswrd(string name, string pin, string user) {
            return base.Channel.resetpaswrd(name, pin, user);
        }
        
        public System.Threading.Tasks.Task<bool> resetpaswrdAsync(string name, string pin, string user) {
            return base.Channel.resetpaswrdAsync(name, pin, user);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public bool IsValidTeacher(string username, string password) {
            return base.Channel.IsValidTeacher(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidTeacherAsync(string username, string password) {
            return base.Channel.IsValidTeacherAsync(username, password);
        }
        
        public bool IsValidStu(string username, string password) {
            return base.Channel.IsValidStu(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidStuAsync(string username, string password) {
            return base.Channel.IsValidStuAsync(username, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WcfService2.ServiceReference1.SearchByNameResponse WcfService2.ServiceReference1.IService1.SearchByName1(WcfService2.ServiceReference1.SearchByNameRequest request) {
            return base.Channel.SearchByName1(request);
        }
        
        public WcfService2.ServiceReference1.Student[] SearchByName1(string UserName) {
            WcfService2.ServiceReference1.SearchByNameRequest inValue = new WcfService2.ServiceReference1.SearchByNameRequest();
            inValue.UserName = UserName;
            WcfService2.ServiceReference1.SearchByNameResponse retVal = ((WcfService2.ServiceReference1.IService1)(this)).SearchByName1(inValue);
            return retVal.SearchByNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.SearchByNameResponse> WcfService2.ServiceReference1.IService1.SearchByName1Async(WcfService2.ServiceReference1.SearchByNameRequest request) {
            return base.Channel.SearchByName1Async(request);
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.SearchByNameResponse> SearchByName1Async(string UserName) {
            WcfService2.ServiceReference1.SearchByNameRequest inValue = new WcfService2.ServiceReference1.SearchByNameRequest();
            inValue.UserName = UserName;
            return ((WcfService2.ServiceReference1.IService1)(this)).SearchByName1Async(inValue);
        }
        
        public WcfService2.ServiceReference1.Student[] SearchBySection(string section) {
            return base.Channel.SearchBySection(section);
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.Student[]> SearchBySectionAsync(string section) {
            return base.Channel.SearchBySectionAsync(section);
        }
        
        public WcfService2.ServiceReference1.Student[] ShowAll() {
            return base.Channel.ShowAll();
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.Student[]> ShowAllAsync() {
            return base.Channel.ShowAllAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WcfService2.ServiceReference1.showallResponse WcfService2.ServiceReference1.IService1.showall1(WcfService2.ServiceReference1.showallRequest request) {
            return base.Channel.showall1(request);
        }
        
        public WcfService2.ServiceReference1.Teacher[] showall1() {
            WcfService2.ServiceReference1.showallRequest inValue = new WcfService2.ServiceReference1.showallRequest();
            WcfService2.ServiceReference1.showallResponse retVal = ((WcfService2.ServiceReference1.IService1)(this)).showall1(inValue);
            return retVal.showallResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WcfService2.ServiceReference1.showallResponse> WcfService2.ServiceReference1.IService1.showall1Async(WcfService2.ServiceReference1.showallRequest request) {
            return base.Channel.showall1Async(request);
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.showallResponse> showall1Async() {
            WcfService2.ServiceReference1.showallRequest inValue = new WcfService2.ServiceReference1.showallRequest();
            return ((WcfService2.ServiceReference1.IService1)(this)).showall1Async(inValue);
        }
        
        public void registerSubject(WcfService2.ServiceReference1.Student student, WcfService2.ServiceReference1.Subject subject) {
            base.Channel.registerSubject(student, subject);
        }
        
        public System.Threading.Tasks.Task registerSubjectAsync(WcfService2.ServiceReference1.Student student, WcfService2.ServiceReference1.Subject subject) {
            return base.Channel.registerSubjectAsync(student, subject);
        }
        
        public void unregisterSubject(WcfService2.ServiceReference1.Student student, WcfService2.ServiceReference1.Subject subject) {
            base.Channel.unregisterSubject(student, subject);
        }
        
        public System.Threading.Tasks.Task unregisterSubjectAsync(WcfService2.ServiceReference1.Student student, WcfService2.ServiceReference1.Subject subject) {
            return base.Channel.unregisterSubjectAsync(student, subject);
        }
        
        public WcfService2.ServiceReference1.Subject[] getSubjects() {
            return base.Channel.getSubjects();
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.Subject[]> getSubjectsAsync() {
            return base.Channel.getSubjectsAsync();
        }
        
        public WcfService2.ServiceReference1.Student loggedInStudent() {
            return base.Channel.loggedInStudent();
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.Student> loggedInStudentAsync() {
            return base.Channel.loggedInStudentAsync();
        }
        
        public WcfService2.ServiceReference1.Subject[] loggedInStudentSubject() {
            return base.Channel.loggedInStudentSubject();
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.Subject[]> loggedInStudentSubjectAsync() {
            return base.Channel.loggedInStudentSubjectAsync();
        }
        
        public void AddResult(string name, string section, string marksobtained, string totalmarks, string status) {
            base.Channel.AddResult(name, section, marksobtained, totalmarks, status);
        }
        
        public System.Threading.Tasks.Task AddResultAsync(string name, string section, string marksobtained, string totalmarks, string status) {
            return base.Channel.AddResultAsync(name, section, marksobtained, totalmarks, status);
        }
        
        public WcfService2.ServiceReference1.AddallResult[] showResult() {
            return base.Channel.showResult();
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.AddallResult[]> showResultAsync() {
            return base.Channel.showResultAsync();
        }
        
        public WcfService2.ServiceReference1.AddallResult[] BySection(string section) {
            return base.Channel.BySection(section);
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.AddallResult[]> BySectionAsync(string section) {
            return base.Channel.BySectionAsync(section);
        }
        
        public WcfService2.ServiceReference1.CompositeType GetDataUsingDataContract(WcfService2.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WcfService2.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WcfService2.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
